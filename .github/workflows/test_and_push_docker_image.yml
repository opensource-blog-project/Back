name: Test, Build, and Deploy to Kubernetes

on:
  workflow_dispatch: # 수동 실행
  push: # 커밋 시 실행
    branches:
      - develop # develop 브랜치에서만 실행
  pull_request: # PR 생성/업데이트 시 실행
    branches:
      - develop # develop 브랜치로의 PR에서만 실행

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Gradle 테스트 실행
      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew # gradlew에 실행 권한 부여

      - name: Run tests
        run: ./gradlew test

  docker:
    needs: test # 테스트가 성공해야 실행
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Docker 로그인을 위한 인증
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Docker 이미지 빌드
      - name: Build Docker Image
        run: |
          docker build -t blog-spring-backend:latest .

      # 4. Docker 이미지 태그 및 푸시
      - name: Push Docker Image
        run: |
          docker tag blog-spring-backend:latest ${{ secrets.DOCKER_USERNAME }}/blog-spring-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/blog-spring-backend:latest

  deploy:
    needs: docker # Docker 작업이 성공해야 실행
    runs-on: ubuntu-latest

    steps:
      # 1. kubectl 설정
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.31.0'

      # 2. Kubernetes 인증
      - name: Authenticate with Kubernetes
        run: |
          echo "${{ secrets.KUBECONFIG_FILE }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      # 3. 배포 파일 적용
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/backend-deployment backend=${{ secrets.DOCKER_USERNAME }}/blog-spring-backend:latest
          kubectl rollout status deployment/backend-deployment

      # 4. 프론트엔드 배포
      - name: Deploy Frontend to Kubernetes
        run: |
         kubectl set image deployment/vue-deployment vue-app=${{ secrets.DOCKER_USERNAME }}/vue-app:latest
         kubectl rollout status deployment/vue-deployment    
